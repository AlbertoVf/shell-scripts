#!/usr/bin/env python
# ? description : Rename file by date creation. Rename file to "name_YYYY-MM-DD.extension".
# ? usage       : rename_sequential [directory|none]

from pathlib import Path


def _rn(old_name, new_name):
    if new_name != old_name:
        old_name.rename(new_name)
        print(f"mv {old_name.name} -> {new_name}")


def rename_with_date(files: list[Path]) -> None:
    from datetime import datetime
    for file in files:
        file = Path(file)
        name, extension = file.stem, file.suffix
        timestamp = file.stat().st_ctime
        date = datetime.fromtimestamp(timestamp).strftime("%Y-%m-%d")
        _rn(file, f"{name}_{date}{extension}")


def rename_with_num(files: list[Path]) -> None:
    for i, file in enumerate(files, start=1):
        folder_name = file.parent.name
        extension = file.suffix
        _rn(file, f"{folder}/{folder_name}_{i}{extension}")


def rename_with_sequence(files: list[Path]) -> None:
    for i, file in enumerate(files, start=0):
        extension = file.suffix
        i = str(i).zfill(3)
        _rn(file, f"{folder}/{i}{extension}")


if __name__ == "__main__":
    from sys import argv
    from os import chdir

    folders = argv[2:] or [Path.cwd()]

    for folder in folders:
        chdir(folder)
        files = sorted(
            [f for f in Path.cwd().iterdir() if f.is_file()],
            key=lambda f: f.stat().st_mtime,
        )
        if argv[1] == "-d": rename_with_date(files)
        elif argv[1] == "-n": rename_with_num(files)
        elif argv[1] == "-s": rename_with_sequence(files)
