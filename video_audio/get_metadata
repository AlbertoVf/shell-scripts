#!/usr/bin/env python
##? help  : Find audio info.
##? usage : get_metadata [file_song]


def metadatos_fichero(file_path):
    from mutagen.easyid3 import EasyID3
    from mutagen.mp3 import MP3
    from mutagen import File
    try:
        audio = MP3(file_path, ID3=EasyID3)
        metadata = audio.items()
        datos = {clave: valor[0] for clave, valor in metadata}

        return {
            "file"   : file_path,
            "title"  : datos.get("title", ""),
            "artist" : datos.get("artist", ""),
        }
    except Exception as e:
        print(f"Error al leer el archivo: {e}")
        return {}



def make_ffmpeg_script(metadatos: dict):
    import shlex
    formatted_metadata = []
    for key, value in metadatos.items():
        if key != "_file":
            formatted_metadata.append(f"-metadata {key}={shlex.quote(str(value))}")
    file = shlex.quote(metadatos.get("_file"))
    return f"ffmpeg -i {file} {' '.join(formatted_metadata)} -c copy -y temp.mp3 && mv -f temp.mp3 {file}"

def metadatos_cancion(ruta_archivo) -> dict:
    def obtener_album(cancion, artista):
        import requests

        url = "https://itunes.apple.com/search"
        params = {
            "term"   : f"{cancion} {artista}",
            "media"  : "music",
            "entity" : "musicTrack",
            "limit"  : 1,
        }
        response = requests.get(url, params=params)
        if response.status_code == 200:
            data = response.json()
            if data["resultCount"] > 0:
                r = data["results"][0]
                return {
                    "title"  : r["trackName"],
                    "artist" : r["artistName"],
                    "album"  : r["collectionName"],
                    "track"  : r["trackNumber"],
                    "genre"  : r["primaryGenreName"],
                    "year"   : r["releaseDate"][:4],
                }
            return {}
        return {}


    metadatos = metadatos_fichero(ruta_archivo)
    title,artist=metadatos.get("title"),metadatos.get("artist")
    return {"_file": ruta_archivo,**obtener_album(title, artist)}



if __name__ == "__main__":
    from sys import argv
    from json import dumps
    from subprocess import run

    song_file = argv[1]
    m         = metadatos_cancion(song_file)
    f         = make_ffmpeg_script(m)
    a         = {**m,"ffmpeg":f}

    run(["xclip", "-selection", "clipboard"], input=f, text=True)
    print(dumps(m,indent=4,ensure_ascii=False))
